1.Longest Palindromic Substring
Given a string S, find the longest palindromic substring in S. 
You may assume that the maximum length of S is 1000, and there exists one unique longest palindromic substring.

Q1. How to remove the hash in the first method
Q2. How to understand the DP method.
string longestPalindrome(string s) {
    int matrix[1001][1001]= {{0}};
    string result = "";
    for(int i=0;i<1001;i++)
        matrix[i][i]=1;
    for(int i=0;i<s.size()-1;i++)
        if(s[i]==s[i+1])
            matrix[i][i+1]=1;

    for(int len=3;len<=s.size();len++)
    {
        for(int i=0;i<s.size()-len+1;i++)
        {
            int j=i+len-1;
            if(s[i]==s[j]&&matrix[i+1][j-1]==1)
                matrix[i][j]=1;
        }
    }
    for(int i=0;i<s.size();i++)
        for(int j=0;j<s.size();j++)
            if(matrix[i][j]==1&&(j-i+1)>result.size())
                result = s.substr(i,j-i+1);
    return result;
}
