1. Longest Substring Without Repeating Characters
Given a string, find the length of the longest substring without repeating characters. 
For example, the longest substring without repeating letters for "abcabcbb" is "abc", which the length is 3. 
For "bbbbb" the longest substring is "b", with the length of 1.

int lengthOfLongestSubstring(string s) {
    int max = 0;
    string result;
    for(int i=0;i<s.length();i++)
    {
        string temp = s.substr(i,1);
        if(result.find(temp)==result.npos)
        {
            result+=temp;
            if(result.size()>max)
                max = (int)result.size();
        }
        else
        {
            int position = (int)result.find(temp);
            result = result.substr(position+1,result.size()-position-1);
            result += temp;
        }
    }
    return max;
}

consider to fast it using hashtable?
